{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/prathmesh/projects/secure-slack/frontend/src/app/components/ChatbotWidget.tsx"],"sourcesContent":["'use client';\nimport React, { useState } from 'react';\n\nconst ChatbotWidget = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    { from: 'bot', text: 'Hi! How can I help you today?' }\n  ]);\n  const [input, setInput] = useState('');\n\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    setMessages([...messages, { from: 'user', text: input }]);\n    setInput('');\n    // Fake bot response\n    setTimeout(() => {\n      setMessages((prev) => [...prev, { from: 'bot', text: 'I will get back to you!' }]);\n    }, 800);\n  };\n\n  return (\n    <>\n      {/* Chat Popup */}\n      {isOpen && (\n        <div className=\"fixed bottom-20 right-6 w-80 bg-white border border-gray-300 rounded-xl shadow-xl z-50 flex flex-col\">\n          <div className=\"bg-blue-600 text-white px-4 py-2 rounded-t-xl font-semibold\">Secure Slack Bot</div>\n          <div className=\"p-4 space-y-2 h-64 overflow-y-auto\">\n            {messages.map((msg, idx) => (\n              <div\n                key={idx}\n                className={`text-sm p-2 rounded-lg max-w-[75%] ${\n                  msg.from === 'bot' ? 'bg-gray-200 self-start' : 'bg-blue-500 text-white self-end'\n                }`}\n              >\n                {msg.text}\n              </div>\n            ))}\n          </div>\n          <div className=\"flex border-t px-2 py-2\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type a message...\"\n              className=\"flex-grow px-2 py-1 border border-gray-300 rounded-l\"\n            />\n            <button\n              onClick={handleSend}\n              className=\"bg-blue-600 text-white px-3 rounded-r hover:bg-blue-700\"\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Floating Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"fixed bottom-6 right-6 p-4 bg-blue-600 text-white rounded-full shadow-lg z-50 hover:bg-blue-700\"\n      >\n        ðŸ’¬\n      </button>\n    </>\n  );\n};\n\nexport default ChatbotWidget;\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,gBAAgB;IACpB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC;YAAE,MAAM;YAAO,MAAM;QAAgC;KACtD;IACD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,aAAa;QACjB,IAAI,MAAM,IAAI,OAAO,IAAI;QACzB,YAAY;eAAI;YAAU;gBAAE,MAAM;gBAAQ,MAAM;YAAM;SAAE;QACxD,SAAS;QACT,oBAAoB;QACpB,WAAW;YACT,YAAY,CAAC,OAAS;uBAAI;oBAAM;wBAAE,MAAM;wBAAO,MAAM;oBAA0B;iBAAE;QACnF,GAAG;IACL;IAEA,qBACE;;YAEG,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAA8D;;;;;;kCAC7E,8OAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,KAAK,oBAClB,8OAAC;gCAEC,WAAW,CAAC,mCAAmC,EAC7C,IAAI,IAAI,KAAK,QAAQ,2BAA2B,mCAChD;0CAED,IAAI,IAAI;+BALJ;;;;;;;;;;kCASX,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,aAAY;gCACZ,WAAU;;;;;;0CAEZ,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;0BAQP,8OAAC;gBACC,SAAS,IAAM,UAAU,CAAC;gBAC1B,WAAU;0BACX;;;;;;;;AAKP;uCAEe","debugId":null}}]
}